plugins {
    id 'java-library'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'org.unbroken-dome.test-sets' version '4.0.0'
    id 'java-test-fixtures'
}


dependencies {
    implementation project(':catalog:catalog-domain')
    implementation project(':types')
    implementation project(':common')

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.hibernate:hibernate-jpamodelgen:6.2.2.Final'

    testImplementation project(':catalog:catalog-domain')
    testImplementation project(':types')
    testImplementation project(':common')

    testImplementation(testFixtures(project(':catalog:catalog-domain')))

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'com.github.gavlyukovskiy:datasource-proxy-spring-boot-starter:1.9.0'

    testFixturesImplementation project(':catalog:catalog-domain')
    testFixturesImplementation project(':types')
}

testSets {
    testFunctional
}

tasks.named('testFunctional') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

build.dependsOn testFunctional
